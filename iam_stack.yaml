AWSTemplateFormatVersion: 2010-09-09
Description: bcosmin.net - IAM stack - v1.2.0
Parameters: {}
Mappings: {}
Metadata: {}
Conditions: {}
Resources:
  LambdaRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonVPCFullAccess'
        - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
        - 'arn:aws:iam::aws:policy/AWSLambdaExecute'
      Path: /
      Policies: []
  VPNInstanceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonVPCReadOnlyAccess'
        - 'arn:aws:iam::aws:policy/AmazonSSMFullAccess'
        - 'arn:aws:iam::aws:policy/AmazonRoute53FullAccess'
      Path: /
      Policies:
        - PolicyName: !Join
            - ''
            - - VPNInstancePolicy
              - !Ref 'AWS::StackName'
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - 's3:*Get*'
                  - 's3:*List*'
                  - 's3:*Put*'
                Effect: Allow
                Resource:
                  - 'arn:aws:s3:::bcosmin-net-data/*'
                  - 'arn:aws:s3:::bcosmin-net-logs/*'
                  - 'arn:aws:s3:::bcosmin-net-data'
                  - 'arn:aws:s3:::bcosmin-net-logs'
                  - 'arn:aws:s3:::bcosmin-net-config/*'
                  - 'arn:aws:s3:::bcosmin-net-config'
              - Action:
                  - 'cloudwatch:PutMetricData'
                Effect: Allow
                Resource: '*'
              - Action:
                  - 'logs:PutLogEvents'
                  - 'logs:CreateLogStream'
                  - 'logs:CreateLogGroup'
                  - 'logs:DescribeLogStreams'
                  - 'logs:DescribeLogGroups'
                Resource:
                  - '*'
                Effect: Allow
              - Action:
                  - 'ec2:DescribeInstances'
                  - 'ec2:DescribeInstanceStatus'
                  - 'ec2:GetConsoleOutput'
                  - 'ec2:AssociateAddress'
                  - 'ec2:DescribeAddresses'
                  - 'ec2:DescribeSecurityGroups'
                  - 'ec2:CreateSnapshot'
                  - 'ec2:DeleteSnapshot'
                  - 'ec2:DescribeVolumes'
                  - 'ec2:DescribeSnapshots'
                  - 'ec2:CreateTags'
                Effect: Allow
                Resource:
                  - '*'
  VPNInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref VPNInstanceRole
  WPInstanceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonSSMFullAccess'
        - 'arn:aws:iam::aws:policy/AmazonRoute53FullAccess'
      Path: /
      Policies:
        - PolicyName: !Join
            - ''
            - - WPInstancePolicy
              - !Ref 'AWS::StackName'
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - 's3:*Get*'
                  - 's3:*List*'
                  - 's3:*Put*'
                Effect: Allow
                Resource:
                  - 'arn:aws:s3:::bcosmin-net-data/*'
                  - 'arn:aws:s3:::bcosmin-net-logs/*'
                  - 'arn:aws:s3:::bcosmin-net-data'
                  - 'arn:aws:s3:::bcosmin-net-logs'
              - Action:
                  - 's3:*Get*'
                  - 's3:*List*'
                Effect: Allow
                Resource:
                  - 'arn:aws:s3:::bcosmin-net-config/*'
                  - 'arn:aws:s3:::bcosmin-net-config'
              - Action:
                  - 'cloudwatch:PutMetricData'
                Effect: Allow
                Resource: '*'
              - Action:
                  - 'logs:PutLogEvents'
                  - 'logs:CreateLogStream'
                  - 'logs:CreateLogGroup'
                  - 'logs:DescribeLogStreams'
                  - 'logs:DescribeLogGroups'
                Resource:
                  - '*'
                Effect: Allow
              - Action:
                  - 'ec2:DescribeInstances'
                  - 'ec2:DescribeInstanceStatus'
                  - 'ec2:GetConsoleOutput'
                  - 'ec2:AssociateAddress'
                  - 'ec2:DescribeAddresses'
                  - 'ec2:DescribeSecurityGroups'
                  - 'ec2:CreateSnapshot'
                  - 'ec2:DeleteSnapshot'
                  - 'ec2:DescribeVolumes'
                  - 'ec2:DescribeSnapshots'
                  - 'ec2:CreateTags'
                Effect: Allow
                Resource:
                  - '*'
  WPInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref WPInstanceRole
  CDeployInstanceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
                - codedeploy.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonSSMFullAccess'
        - 'arn:aws:iam::aws:policy/AmazonRoute53FullAccess'
      Path: /
      Policies:
        - PolicyName: !Join
            - ''
            - - CDeployInstancePolicy
              - !Ref 'AWS::StackName'
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - 's3:*Get*'
                  - 's3:*List*'
                  - 's3:*Put*'
                Effect: Allow
                Resource:
                  - 'arn:aws:s3:::bcosmin-net-codedeploy/*'
                  - 'arn:aws:s3:::bcosmin-net-logs/*'
                  - 'arn:aws:s3:::bcosmin-net-codedeploy'
                  - 'arn:aws:s3:::bcosmin-net-logs'
              - Action:
                  - 's3:*Get*'
                  - 's3:*List*'
                Effect: Allow
                Resource:
                  - 'arn:aws:s3:::bcosmin-net-config/*'
                  - 'arn:aws:s3:::bcosmin-net-config'
              - Action:
                  - 'cloudwatch:PutMetricData'
                Effect: Allow
                Resource: '*'
              - Action:
                  - 'logs:PutLogEvents'
                  - 'logs:CreateLogStream'
                  - 'logs:CreateLogGroup'
                  - 'logs:DescribeLogStreams'
                  - 'logs:DescribeLogGroups'
                Resource:
                  - '*'
                Effect: Allow
              - Action:
                  - 'ec2:DescribeInstances'
                  - 'ec2:DescribeInstanceStatus'
                  - 'ec2:GetConsoleOutput'
                  - 'ec2:AssociateAddress'
                  - 'ec2:DescribeAddresses'
                  - 'ec2:DescribeSecurityGroups'
                  - 'ec2:CreateSnapshot'
                  - 'ec2:DeleteSnapshot'
                  - 'ec2:DescribeVolumes'
                  - 'ec2:DescribeSnapshots'
                  - 'ec2:CreateTags'
                  - 'elasticloadbalancing:*'
                  - 'autoscaling:*'
                Effect: Allow
                Resource:
                  - '*'
  CDeployInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref CDeployInstanceRole
Outputs:
  VPNInstanceProfile:
    Description: VPN Instance Profile
    Value: !Ref VPNInstanceProfile
    Export:
      Name: !Sub '${AWS::StackName}-VPNInstanceProfile'
  VPNInstanceRoleArn:
    Description: VPN Instance Role ARN
    Value: !GetAtt
      - VPNInstanceRole
      - Arn
    Export:
      Name: !Sub '${AWS::StackName}-VPNInstanceRoleArn'
  VPNInstanceRole:
    Description: VPN Instance Role
    Value: !Ref VPNInstanceRole
    Export:
      Name: !Sub '${AWS::StackName}-VPNInstanceRole'
  WPInstanceProfile:
    Description: WP Instance Profile
    Value: !Ref WPInstanceProfile
    Export:
      Name: !Sub '${AWS::StackName}-WPInstanceProfile'
  WPInstanceRoleArn:
    Description: WP Instance Role ARN
    Value: !GetAtt
      - WPInstanceRole
      - Arn
    Export:
      Name: !Sub '${AWS::StackName}-WPInstanceRoleArn'
  WPInstanceRole:
    Description: WP Instance Role
    Value: !Ref WPInstanceRole
    Export:
      Name: !Sub '${AWS::StackName}-WPInstanceRole'
  CDeployInstanceProfile:
    Description: CDeploy Instance Profile
    Value: !Ref CDeployInstanceProfile
    Export:
      Name: !Sub '${AWS::StackName}-CDeployInstanceProfile'
  CDeployInstanceRoleArn:
    Description: CDeploy Instance Role ARN
    Value: !GetAtt
      - CDeployInstanceRole
      - Arn
    Export:
      Name: !Sub '${AWS::StackName}-CDeployInstanceRoleArn'
  CDeployInstanceRole:
    Description: CDeploy Instance Role
    Value: !Ref CDeployInstanceRole
    Export:
      Name: !Sub '${AWS::StackName}-CDeployInstanceRole'
  LambdaRoleArn:
    Description: bcosmin.net Lambda Role ARN
    Value: !GetAtt
      - LambdaRole
      - Arn
    Export:
      Name: !Sub '${AWS::StackName}-LambdaRoleArn'
