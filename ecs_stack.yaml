

Description: >
    This template deploys an ECS cluster to the provided VPC and subnets
    using an Auto Scaling Group

Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

    InstanceType:
        Description: Which instance type should we use to build the ECS cluster?
        Type: String
        Default: t2.small

    ClusterSize:
        Description: How many ECS hosts do you want to initially deploy?
        Type: Number
        Default: 2

    VPC:
        Description: Choose which VPC this ECS cluster should be deployed to
        Type: AWS::EC2::VPC::Id

    Subnets:
        Description: Choose which subnets this ECS cluster should be deployed to
        Type: List<AWS::EC2::Subnet::Id>

    SecurityGroups:
        Description: Select the Security Group to use for the ECS cluster hosts
        Type: List<AWS::EC2::SecurityGroup::Id>

    KeyName:
        Description: SSH KeyPair Name
        Type: AWS::EC2::KeyPair::KeyName


Mappings:

    # These are the latest ECS optimized AMIs as of Feb 2018:
    #
    #   amzn-ami-2017.09.h-amazon-ecs-optimized
    #   ECS agent:    1.17.1
    #   Docker:       17.09.1-ce
    #   ecs-init:     1.17.1-1
    #
    # You can find the latest available on this page of our documentation:
    # http://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html
    # (note the AMI identifier is region specific)

    AWSRegionToAMI:
        us-east-2:
            AMI: ami-b86a5ddd
        us-east-1:
            AMI: ami-a7a242da
        us-west-2:
            AMI: ami-92e06fea
        us-west-1:
            AMI: ami-9ad4dcfa
        eu-west-3:
            AMI: ami-698b3d14
        eu-west-2:
            AMI: ami-f4e20693
        eu-west-1:
            AMI: ami-0693ed7f
        eu-central-1:
            AMI: ami-10e6c8fb
        ap-northeast-2:
            AMI: ami-a5dd70cb
        ap-northeast-1:
            AMI: ami-68ef940e
        ap-southeast-2:
            AMI: ami-ee884f8c
        ap-southeast-1:
            AMI: ami-0a622c76
        ca-central-1:
            AMI: ami-5ac94e3e
        ap-south-1:
            AMI: ami-2e461a41
        sa-east-1:
            AMI: ami-d44008b8

Resources:

    ECSCluster:
        Type: AWS::ECS::Cluster
        Properties:
            ClusterName: !Ref EnvironmentName

    ECSAutoScalingGroup:
        Type: AWS::AutoScaling::AutoScalingGroup
        Properties:
            VPCZoneIdentifier: !Ref Subnets
            LaunchConfigurationName: !Ref ECSLaunchConfiguration
            MinSize: !Ref ClusterSize
            MaxSize: !Ref ClusterSize
            DesiredCapacity: !Ref ClusterSize
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} ECS host
                  PropagateAtLaunch: true
        CreationPolicy:
            ResourceSignal:
                Timeout: PT15M
        UpdatePolicy:
            AutoScalingRollingUpdate:
                MinInstancesInService: 1
                MaxBatchSize: 1
                PauseTime: PT15M
                SuspendProcesses:
                  - HealthCheck
                  - ReplaceUnhealthy
                  - AZRebalance
                  - AlarmNotification
                  - ScheduledActions
                WaitOnResourceSignals: true

    ECSLaunchConfiguration:
        Type: AWS::AutoScaling::LaunchConfiguration
        Properties:
            ImageId:  !FindInMap [AWSRegionToAMI, !Ref "AWS::Region", AMI]
            InstanceType: !Ref InstanceType
            SecurityGroups: !Ref SecurityGroups
            IamInstanceProfile: !Ref ECSInstanceProfile
            KeyName: !Ref KeyName
            UserData:
                "Fn::Base64": !Sub |
                    #!/bin/bash
                    yum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm
                    yum install -y aws-cfn-bootstrap hibagent
                    /opt/aws/bin/cfn-init -v --region ${AWS::Region} --stack ${AWS::StackName} --resource ECSLaunchConfiguration
                    /opt/aws/bin/cfn-signal -e $? --region ${AWS::Region} --stack ${AWS::StackName} --resource ECSAutoScalingGroup
                    /usr/bin/enable-ec2-spot-hibernation

        Metadata:
            AWS::CloudFormation::Init:
                config:
                    packages:
                        yum:
                            awslogs: []

                    commands:
                        01_add_instance_to_cluster:
                            command: !Sub echo ECS_CLUSTER=${ECSCluster} >> /etc/ecs/ecs.config
                    files:
                        "/etc/cfn/cfn-hup.conf":
                            mode: 000400
                            owner: root
                            group: root
                            content: !Sub |
                                [main]
                                stack=${AWS::StackId}
                                region=${AWS::Region}

                        "/etc/cfn/hooks.d/cfn-auto-reloader.conf":
                            content: !Sub |
                                [cfn-auto-reloader-hook]
                                triggers=post.update
                                path=Resources.ECSLaunchConfiguration.Metadata.AWS::CloudFormation::Init
                                action=/opt/aws/bin/cfn-init -v --region ${AWS::Region} --stack ${AWS::StackName} --resource ECSLaunchConfiguration

                        "/etc/awslogs/awscli.conf":
                            content: !Sub |
                                [plugins]
                                cwlogs = cwlogs
                                [default]
                                region = ${AWS::Region}

                        "/etc/awslogs/awslogs.conf":
                            content: !Sub |
                                [general]
                                state_file = /var/lib/awslogs/agent-state

                                [/var/log/dmesg]
                                file = /var/log/dmesg
                                log_group_name = ${ECSCluster}-/var/log/dmesg
                                log_stream_name = ${ECSCluster}

                                [/var/log/messages]
                                file = /var/log/messages
                                log_group_name = ${ECSCluster}-/var/log/messages
                                log_stream_name = ${ECSCluster}
                                datetime_format = %b %d %H:%M:%S

                                [/var/log/docker]
                                file = /var/log/docker
                                log_group_name = ${ECSCluster}-/var/log/docker
                                log_stream_name = ${ECSCluster}
                                datetime_format = %Y-%m-%dT%H:%M:%S.%f

                                [/var/log/ecs/ecs-init.log]
                                file = /var/log/ecs/ecs-init.log.*
                                log_group_name = ${ECSCluster}-/var/log/ecs/ecs-init.log
                                log_stream_name = ${ECSCluster}
                                datetime_format = %Y-%m-%dT%H:%M:%SZ

                                [/var/log/ecs/ecs-agent.log]
                                file = /var/log/ecs/ecs-agent.log.*
                                log_group_name = ${ECSCluster}-/var/log/ecs/ecs-agent.log
                                log_stream_name = ${ECSCluster}
                                datetime_format = %Y-%m-%dT%H:%M:%SZ

                                [/var/log/ecs/audit.log]
                                file = /var/log/ecs/audit.log.*
                                log_group_name = ${ECSCluster}-/var/log/ecs/audit.log
                                log_stream_name = ${ECSCluster}
                                datetime_format = %Y-%m-%dT%H:%M:%SZ

                    services:
                        sysvinit:
                            cfn-hup:
                                enabled: true
                                ensureRunning: true
                                files:
                                    - /etc/cfn/cfn-hup.conf
                                    - /etc/cfn/hooks.d/cfn-auto-reloader.conf
                            awslogs:
                                enabled: true
                                ensureRunning: true
                                files:
                                    - /etc/awslogs/awslogs.conf
                                    - /etc/awslogs/awscli.conf

Outputs:

    Cluster:
        Description: A reference to the ECS cluster
        Value: !Ref ECSCluster

    ECSServiceAutoScalingRole:
        Description: A reference to ECS service auto scaling role
        Value: !GetAtt ECSServiceAutoScalingRole.Arn

    ECSAutoScalingGroupName:
        Description: A reference to ECS AutoScaling Group Name
        Value: !Ref ECSAutoScalingGroup
